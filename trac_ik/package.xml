<package>

  <name>trac_ik</name>
  <version>1.0.0</version>
  <description>
    The ROS packages in this repository were created to provide an alternative
    Inverse Kinematics solver to the popular inverse Jacobian methods in
    KDL. Specifically, KDL's convergence algorithms are based on Newton's
    method, which does not work well in the presence of joint limits---common
    for many robotic platforms. TRAC-IK concurrently runs two IK
    implementations. One is a simple extension to KDL's Newton-based
    convergence algorithm that detects and mitigates local minima due to joint
    limits by random jumps. The second is an SQP (Sequential Quadratic
    Programming) nonlinear optimization approach which uses quasi-Newton
    methods that better handle joint limits. Currently, the IK search returns
    immediately when either of these algorithms converges to an answer. Future
    work plans to allow secondary constraints and sorting functions to be
    provided to the main TRAC-IK call in order to receive back the "best" IK
    solution.  

    This repo contains 2 ROS packages:

    The TRAC-IK kinematics code in trac_ik_lib builds a .so library that can
    be used as a drop in replacement for KDL's IK functions for KDL
    chains. (This has been tested using ROS Indigo with catkin).
    
    The trac_ik_kinematics_plugin package builds a MoveIt! plugin that can
    replace the default KDL plugin for MoveIt! with TRAC-IK for use in
    planning.
  </description> 
  <maintainer email="pbeeson@traclabs.com">Patrick Beeson</maintainer>
  <author>Patrick Beeson</author>
  <license>BSD</license>

  <url type="website">http://www.ros.org/wiki/trac_ik</url>
  <url type="repository">https://bitbucket.org/traclabs/trac_ik</url>

  <buildtool_depend>catkin</buildtool_depend>

  <run_depend>trac_ik_lib</run_depend>
  <run_depend>trac_ik_kinematics_plugin</run_depend>

  <export>
    <metapackage/>
  </export>

</package>
